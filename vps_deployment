9/01/14 09:17 - 13:47

VPS   198.211.126.95
user  plastmuse

BASH COMMANDS

  netstat -anltp                            # network statistics
  ps aux | grep "назва процесу, програми"   # network statistics

0. References
  
  0.1 Setting up a Digital Ocean Droplet (VPS) on Ubuntu with Rails, Nginx, Unicorn, Postgres, Redis and Capistrano

  http://www.andrewgertig.com/setting-up-a-digital-ocean-droplet-vps-on-ubuntu-with-rails-nginx-unicorn-postgres-redis-and-capistrano

  0.2 


1. Postgre SQL database usage

  1.1 Alter config/database.yaml to 

    error:  FATAL:  password authentication failed for user "ENV["POSTGRESQL_PLASTMUSE_ADMIN"]"
    answer: ENV variables are accessed only in embedded ruby mode!!!

    development:
      adapter: postgresql
      encoding: unicode
      database: plastmuse_development
      host: localhost
      pool: 5
      timeout: 5000
      username: <%= ENV["POSTGRESQL_PLASTMUSE_ADMIN"] %>
      password: <%= ENV["POSTGRESQL_PLASTMUSE_ADMIN_PASSWORD"] %>


    test:
      adapter: postgresql
      encoding: unicode
      database: plastmuse_test
      host: localhost
      pool: 5
      timeout: 5000
      username: <%= ENV["POSTGRESQL_PLASTMUSE_ADMIN"] %>
      password: <%= ENV["POSTGRESQL_PLASTMUSE_ADMIN_PASSWORD"] %>


    production:
      adapter: postgresql
      encoding: unicode
      database: plastmuse_production
      host: localhost
      pool: 5
      timeout: 5000
      username: <%= ENV["POSTGRESQL_PLASTMUSE_ADMIN"] %>
      password: <%= ENV["POSTGRESQL_PLASTMUSE_ADMIN_PASSWORD"] %>


  1.2 Added environmetal variables to ~/.barshrc file

    ### Username and password for PostgreSql DB of PlastMuse project
    export POSTGRESQL_PLASTMUSE_ADMIN="..."
    export POSTGRESQL_PLASTMUSE_ADMIN_PASSWORD="..."

  1.3 Included postgre gem to GEMFILE and installed it

    gem 'pg'

    sudo add-apt-repository ppa:pitti/postgresql
    sudo apt-get update
    sudo apt-get install postgresql libpq-dev
  
  1.4 Access PostgreSql server, set a password, create a user and create a user-related production database

    sudo -u postgres PostgreSql             # Access server as the sudo
    postgres=# \password              # Enter root passord for the server

    # postgres=# create user blog with password 'secret';     # this must comply with 1.2
    postgres=# create admin blog with password 'tc_pass';     # this must comply with 1.2
    => CREATE ROLE
    # postgres=# create database blog_production owner blog;
    postgres=# create database plastmuse_production owner admin;
    => CREATE DATABASE

    Postgres is now set up on our server. We quit out of psql of it by running \quit .


    ALTER PASSWORD OF user      alter user user_name with password 'new_password' 
    RESTART POSTGRESQL server   sudo /etc/init.d/postgresql restart

2. Environmnet general setup

  2.0 Installation of prerequisite to Solar - JRE

    sudo add-apt-repository ppa:webupd8team/java
    sudo apt-get update
    sudo apt-get install oracle-java7-installer

  2.1 Login to VPS

    ssh root@198.211.126.95

  2.2 Install PostgreSql (as in 1.3-1.4)

  [2.3 Install Node.js and Postfix ] was already installed

    apt-get install postfix

    add-apt-repository ppa:chris-lea/node.js
    apt-get update
    apt-get -y install nodejs

  2.4 Create seperate user for site managment and change to it

    # adduser deployer --ingroup admin
    adduser plastmuse --ingroup admin

    su plastmuse

  2.5 Standart rbenv Installation

    cd
    git clone git://github.com/sstephenson/rbenv.git .rbenv
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
    echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
    git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
    source ~/.bash_profile

  2.6 Install Ruby version and make it global default

    rbenv install 2.0.0-p195
    rbenv global 2.0.0-p195
    ruby -v

  2.7 Installing Bundler and other stuff

    gem install bundler --no-ri --no-rdoc
    rbenv rehash
    bundle -v


3. Linking to project ( Capistrano )

  3.1 Try to ssh-connect to github

    ssh git@github.com

    [must result in]=> 
    Warning: Permanently added 'github.com,192.30.252.130' (RSA) to the list of known hosts.
    Permission denied (publickey).

  3.2 Add /config/database.yml to .gitignore file and make a copy of it

    /config/database.yml

    cp config/database.yml config/database.example.yml

  3.3 nginx

  3.4 unicorn

  3.5 capistrano

    given deploy.rb depends on 
      gem 'delayed_job_active_record'
    for background seed of database

  WARNING : ~/.bashrc file example

  if [ -d $HOME/.rbenv ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
  fi

  # If not running interactively, don't do anything
  [ -z "$PS1" ] && return
   
  # Alias definitions.
  # You may want to put all your additions into a separate file like
  # ~/.bash_aliases, instead of adding them here directly.
  # See /usr/share/doc/bash-doc/examples in the bash-doc package.
   
  if [ -f ~/.bash_aliases ]; then
      . ~/.bash_aliases
  fi
   
  # enable programmable completion features (you don't need to enable
  # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
  # sources /etc/bash.bashrc).
  if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
      . /etc/bash_completion
  fi

  # Username and password for PostgreSql DB of PlastMuse project
  export POSTGRESQL_PLASTMUSE_ADMIN='123123123'
  export POSTGRESQL_PLASTMUSE_ADMIN_PASSWORD='123123123'

  3.6 SSH keys work

  3.7 cap deploy:cold

  error:

    * 2014-01-09 14:47:54 executing `bundle:install'
    * executing "cd /home/plastmuse/apps/plastmuse/releases/20140109124753 && bundle install --gemfile /home/plastmuse/apps/plastmuse/releases/20140109124753/Gemfile --path /home/plastmuse/apps/plastmuse/shared/bundle --deployment --quiet --without development test"
       servers: ["198.211.126.95"]
       [198.211.126.95] executing command
    ** [out :: 198.211.126.95] sh: 1:
    ** [out :: 198.211.126.95] bundle: not found
    ** [out :: 198.211.126.95] 

  answer:

    Make correct ~/.bashrc


  error:

  answer:

    gem install libv8 -- --with-system-v8
    bundle config build.libv8 --with-system-v8

    https://github.com/cowboyd/libv8/tree/3.11#bring-your-own-v8

  error:

    ERROR:  Error installing nokogiri:
        ERROR: Failed to build gem native extension.

          /home/plastmuse/.rbenv/versions/2.0.0-p195/bin/ruby extconf.rb
      Extracting libxml2-2.8.0.tar.gz into tmp/i686-linux-gnu/ports/libxml2/2.8.0... OK
      Running 'configure' for libxml2 2.8.0... OK
      Running 'compile' for libxml2 2.8.0... ERROR, review 'tmp/i686-linux-gnu/ports/libxml2/2.8.0/compile.log' to see what happened.

  answer :

    Run gem install nokogiri -v '1.6.1' several times =)

  error :

    Make sure that `gem install therubyracer -v '0.12.0'` succeeds before bundling.

  answer:

    on osx mavericks gcc47 required before

    sudo add-apt-repository ppa:ubuntu-toolchain-r/test
    sudo apt-get update
    sudo apt-get install gcc-4.7

    Here's a list of steps which worked for me to solve that block quickly

    Uninstall all versions of gems 'libv8' and 'therubyracer'

    > gem uninstall therubyracer

    > gem uninstall libv8

    Install therubyracer manually

    > gem install therubyracer

    Fetching: libv8-3.3.10.4-x86_64-linux.gem (100%) Fetching: therubyracer-0.10.1.gem (100%) Building native extensions. This could take a while... Successfully installed libv8-3.3.10.4-x86_64-linux Successfully installed therubyracer-0.10.1 2 gems installed Installing ri documentation for libv8-3.3.10.4-x86_64-linux... Installing ri documentation for therubyracer-0.10.1... Installing RDoc documentation for libv8-3.3.10.4-x86_64-linux... Installing RDoc documentation for therubyracer-0.10.1...

    Check versions of installed gems

    > gem list | grep libv

    libv8 (3.3.10.4 x86_64-linux)

    > gem list | grep therubyracer

    therubyracer (0.10.1)

    Set those versions in Gemfile and run

    > bundle install

    Summary. Well I understand that in my case I used not the latest versions and it could be bad for compatibility sake. But at least I could continue development.


    CONCLUSION : commented out therubyracer gem. Works )

    error:

      fe_sendauth: no password

    answer:


      answer:   http://stackoverflow.com/questions/17996957/fe-sendauth-no-password-supplied

      ls /etc/postgresql
      sudo vim /etc/postgresql/9.1/main/pg_hba.conf
      sudo chmod +w /etc/postgresql/9.1/main/pg_hba.conf

      add to pg_hba.conf <<
        # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD

        # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD

        # "local" is for Unix domain socket connections only
        local   all         all                               trust
        # IPv4 local connections:
        host    all         all         127.0.0.1/32          trust
        # IPv6 local connections:
        host    all         all         ::1/128               trust
        # Remote connections
        host    your_db     your_user   (Client IP ADDR)      md5

    error:

      PG::InsufficientPrivilege: ERROR:  permission denied for relation schema_migrations

    answer:


    3.7 cap delpoy

      error: 

        WARNING: HEAD is not the same as origin/master

      answer:

        Change all occurances of master in deploy.rb to #{branch}

          desc "Make sure local git is in sync with remote." 
            task :check_revision, roles: :web do
              unless `git rev-parse HEAD` == `git rev-parse origin/#{branch}` 
                puts "WARNING: HEAD is not the same as origin/#{branch}"
                puts "Run `git push` to sync changes." 
                exit
              end 
            end 

    3.8 Rails assets missing after Capistrano deploy

      cahnge assets

    3.9 Solr in production

      # for switch to port 8983
          bundle exec rake sunspot:solr:start RAILS_ENV=production 

      # for 404 Error change path: /solr/production to /solr

        production:
          solr:
            hostname: 198.211.126.95
            port: 8983
            log_level: WARNING
            path: /solr
            # read_timeout: 2
            # open_timeout: 0.5

4. Issues after deployment

    4.1 Some assets are not compiled

      http://stackoverflow.com/questions/7920298/rails-3-1-deploy-to-production-with-apache-passenger-asset-problems  


  # psych error - due to manifest.json files
